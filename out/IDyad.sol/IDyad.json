{"abi":[{"type":"function","name":"burn","inputs":[{"name":"id","type":"uint256","internalType":"uint256"},{"name":"from","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mint","inputs":[{"name":"id","type":"uint256","internalType":"uint256"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"NotLicensed","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"burn(uint256,address,uint256)":"9eea5f66","mint(uint256,address,uint256)":"836a1040"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotLicensed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(uint256,address,uint256)\":{\"details\":\"The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.\",\"params\":{\"amount\":\"The amount of tokens to be burned.\",\"from\":\"The address of the recipient who the tokens will be burnt        from.\",\"id\":\"ID of the dNFT.\"}},\"mint(uint256,address,uint256)\":{\"details\":\"The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.\",\"params\":{\"amount\":\"The amount of tokens to be minted.\",\"id\":\"ID of the dNFT.\",\"to\":\"The address of the recipient who will receive the tokens.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256,address,uint256)\":{\"notice\":\"Burns amount of DYAD through a dNFT and licensed vault manager         from a specified address.\"},\"mint(uint256,address,uint256)\":{\"notice\":\"Mints amount of DYAD through a dNFT and licensed vault manager          to a specified address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDyad.sol\":\"IDyad\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IDyad.sol\":{\"keccak256\":\"0x5c74030d6175e32383bea227672bff69af604ddb4d01ac77bb711f826519ee04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4be5a6f2dd74b33d4663edd449873f7b86d363c5de198942379fc1d2d5b29ce\",\"dweb:/ipfs/QmXtEW3kALnJwKm6XFqvYFcjUWTucqCEwDNTYXua5ciHTL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"NotLicensed"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint"}],"devdoc":{"kind":"dev","methods":{"burn(uint256,address,uint256)":{"details":"The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.","params":{"amount":"The amount of tokens to be burned.","from":"The address of the recipient who the tokens will be burnt        from.","id":"ID of the dNFT."}},"mint(uint256,address,uint256)":{"details":"The caller must be a licensed vault manager. Vault manager get      licensed by the 'sll'.","params":{"amount":"The amount of tokens to be minted.","id":"ID of the dNFT.","to":"The address of the recipient who will receive the tokens."}}},"version":1},"userdoc":{"kind":"user","methods":{"burn(uint256,address,uint256)":{"notice":"Burns amount of DYAD through a dNFT and licensed vault manager         from a specified address."},"mint(uint256,address,uint256)":{"notice":"Mints amount of DYAD through a dNFT and licensed vault manager          to a specified address."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IDyad.sol":"IDyad"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/IDyad.sol":{"keccak256":"0x5c74030d6175e32383bea227672bff69af604ddb4d01ac77bb711f826519ee04","urls":["bzz-raw://f4be5a6f2dd74b33d4663edd449873f7b86d363c5de198942379fc1d2d5b29ce","dweb:/ipfs/QmXtEW3kALnJwKm6XFqvYFcjUWTucqCEwDNTYXua5ciHTL"],"license":"MIT"}},"version":1},"id":16}